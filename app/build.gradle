plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'org.jetbrains.kotlin.plugin.compose'
}

android {
    namespace 'com.ocrtts'
    compileSdk 34

    defaultConfig {
        applicationId "com.ocrtts"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "API_KEY", "\"${properties.getProperty('API_KEY')}\""
        buildConfigField "String", "SHA_CERT", "\"${properties.getProperty('SHA_CERT')}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    composeCompiler {
        enableStrongSkippingMode = true

        reportsDestination = layout.buildDirectory.dir("compose_compiler")
        stabilityConfigurationFile = rootProject.layout.projectDirectory.file("stability_config.conf")
    }
    packagingOptions {
//        resources {
//            excludes += '/META-INF/{AL2.0,LGPL2.1}'
//        }
        resources.excludes.add("META-INF/*")
    }
}

dependencies {

    // build.gradle

//    implementation group: 'com.microsoft.cognitiveservices.speech', name: 'client-sdk', version: "1.38.0", ext: "jar"
    implementation 'com.microsoft.cognitiveservices.speech:client-sdk:1.38.0'

    lintChecks("com.slack.lint.compose:compose-lint-checks:1.2.0")

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.3'
    implementation 'androidx.activity:activity-compose:1.9.0'

    implementation platform('androidx.compose:compose-bom:2024.06.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-core:1.7.0-beta05'
    implementation 'androidx.compose.material:material-icons-extended:1.7.0-beta05'
    implementation 'androidx.compose.material:material:1.6.8'
    implementation "androidx.navigation:navigation-compose:2.7.7"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1"

    ///// LIFECYCLE /////
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.3"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.8.3"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.8.3"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.3"

    //// CAMERA STUFF ////
    implementation "androidx.camera:camera-camera2:1.3.4"
    implementation "androidx.camera:camera-lifecycle:1.3.4"
    implementation "androidx.camera:camera-view:1.3.4"

    //// ML-KIT ////
    implementation 'com.google.mlkit:text-recognition:16.0.0'
    implementation 'com.google.mlkit:text-recognition-chinese:16.0.0'

    //// GOOGLE CLOUD VISION ////
//    implementation 'com.google.api-client:google-api-client:1.32.1'
//    implementation 'com.google.cloud:google-cloud-vision:3.44.0'
//    implementation 'com.google.api-client:google-api-client-jackson2:1.32.1'
//    implementation 'com.google.http-client:google-http-client-jackson2:1.39.2'
//    implementation 'com.google.code.gson:gson:2.11.0'

    //// GOOGLE ONLINE OCR ///
    implementation("com.google.oauth-client:google-oauth-client-jetty:1.36.0")
    implementation("com.google.api-client:google-api-client-android:2.6.0")
    implementation("com.google.apis:google-api-services-vision:v1-rev451-1.25.0")
    implementation("com.google.code.gson:gson:2.11.0")

    //// ACCOMPANIST ////
    implementation "com.google.accompanist:accompanist-permissions:0.34.0"

    //// PREFERENCES DATASTORE ////
    implementation "androidx.datastore:datastore-preferences:1.1.1"

    //// HTTPS & SERIALIZATION ////
//    implementation "com.squareup.retrofit2:retrofit:2.11.0"
//    implementation "com.squareup.retrofit2:converter-scalars:2.11.0"
//    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"
////    implementation "com.squareup.okhttp3:okhttp:4.12.0"
//    implementation "io.ktor:ktor-client-core:2.3.12"
//    implementation "io.ktor:ktor-client-cio:2.3.12"
//    implementation "io.ktor:ktor-client-content-negotiation:2.3.12"
//    implementation "io.ktor:ktor-serialization-kotlinx-json:2.3.12"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.06.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

}